{"version":3,"file":"static/js/427.f114e7c9.chunk.js","mappings":"oTAcMA,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAENC,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CJ,MAAOG,EAAAA,KAAaE,WACpBJ,SAAUE,EAAAA,KAAaE,aAGV,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,SAAC,KAAD,CACET,cAAeA,EACfG,iBAAkBA,EAClBO,SARiB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BJ,GAASK,EAAAA,EAAAA,IAAMF,IACfC,GACD,EAEC,SAKG,kBACC,SAAC,KAAD,CAAKE,GAAG,UAAUC,EAAG,EAAGC,KAAM,IAA9B,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,QAAQC,SAAUf,EAA9B,SACG,gBAAGgB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CACEC,YAAU,EACVC,UAAWF,EAAKG,OAAOtB,OAASmB,EAAKI,QAAQvB,MAF/C,WAIE,SAAC,IAAD,CAAWwB,QAAQ,QAAQC,SAAS,KAAKC,WAAW,SAApD,oBAGA,SAAC,EAAAC,GAAD,kBACMT,GADN,IAEEU,YAAY,WACZC,GAAI,EACJb,KAAK,QACLc,KAAK,QACLC,YAAY,yBAEd,SAAC,KAAD,UAAmBZ,EAAKG,OAAOtB,UAhBlC,KAoBH,SAAC,KAAD,CAAOgB,KAAK,WAAWC,SAAUf,EAAjC,SACG,gBAAGgB,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CACEC,YAAU,EACVC,UAAWF,EAAKG,OAAOrB,UAAYkB,EAAKI,QAAQtB,SAFlD,WAIE,SAAC,IAAD,CACEuB,QAAQ,WACRC,SAAS,KACTC,WAAW,SAHb,uBAOA,SAAC,EAAAC,GAAD,kBACMT,GADN,IAEEU,YAAY,WACZC,GAAI,EACJb,KAAK,WACLc,KAAK,eAEP,SAAC,KAAD,UAAmBX,EAAKG,OAAOrB,aAnBlC,KAuBH,SAAC,IAAD,CAAQ+B,GAAI,EAAGC,YAAY,OAAOH,KAAK,SAAvC,wBAhDL,GAwDN,C","sources":["pages/Login/Login.jsx"],"sourcesContent":["import { Formik, Form, Field } from 'formik';\nimport {\n  Box,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\n\nimport { login } from 'redux/index';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required(),\n  password: Yup.string().required(),\n});\n\nexport default function Login() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    dispatch(login(values));\n    resetForm();\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {() => (\n        <Box as=\"section\" p={3} maxW={450}>\n          <Form>\n            <Field name=\"email\" validate={validationSchema}>\n              {({ field, form }) => (\n                <FormControl\n                  isRequired\n                  isInvalid={form.errors.email && form.touched.email}\n                >\n                  <FormLabel htmlFor=\"email\" fontSize=\"lg\" fontWeight=\"medium\">\n                    Email\n                  </FormLabel>\n                  <Input\n                    {...field}\n                    borderColor=\"teal.300\"\n                    mb={4}\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"johnwick@gmail.com\"\n                  />\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Field name=\"password\" validate={validationSchema}>\n              {({ field, form }) => (\n                <FormControl\n                  isRequired\n                  isInvalid={form.errors.password && form.touched.password}\n                >\n                  <FormLabel\n                    htmlFor=\"password\"\n                    fontSize=\"lg\"\n                    fontWeight=\"medium\"\n                  >\n                    Password\n                  </FormLabel>\n                  <Input\n                    {...field}\n                    borderColor=\"teal.300\"\n                    mb={4}\n                    name=\"password\"\n                    type=\"password\"\n                  />\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button mt={4} colorScheme=\"teal\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        </Box>\n      )}\n    </Formik>\n  );\n}\n"],"names":["initialValues","email","password","validationSchema","Yup","shape","required","Login","dispatch","useDispatch","onSubmit","values","resetForm","login","as","p","maxW","name","validate","field","form","isRequired","isInvalid","errors","touched","htmlFor","fontSize","fontWeight","I","borderColor","mb","type","placeholder","mt","colorScheme"],"sourceRoot":""}